{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["Notification","message","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","capitalizedOption","toUpperCase","substring","type","id","onClick","Section","title","children","App","state","handleOnButtonClick","event","key","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAIeA,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGC,UAAU,UAAb,SAAwBD,KCqB/CE,G,MApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAIN,UAAU,mBAAd,wBAEW,IAAVK,EACC,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,qCACE,oBAAGC,UAAU,kBAAb,mBAAsCE,KACtC,oBAAGF,UAAU,kBAAb,sBAAyCG,KACzC,oBAAGH,UAAU,kBAAb,kBAAqCI,KACrC,oBAAGJ,UAAU,kBAAb,oBAAuCK,KACvC,oBAAGL,UAAU,kBAAb,gCACsBM,EADtB,eCQOC,G,MArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIT,UAAU,oBAAd,SACGQ,EAAQE,KAAI,SAAAC,GACX,IAAMC,EAAoBD,EAAO,GAAGE,cAAgBF,EAAOG,UAAU,GAErE,OACE,oBAAId,UAAU,yBAAd,SACE,wBACEA,UAAU,eACVe,KAAK,SACLC,GAAIL,EACJM,QAASR,EAJX,SAMGG,KAPuCD,UCCrCO,G,MAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,mBAAGpB,UAAU,gBAAb,SAA8BmB,IAC7BC,OC4CUC,E,4MA1CbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,oBAAsB,SAAAC,GACpB,IAAMC,EAAMD,EAAME,OAAOV,GAEzB,EAAKW,UAAS,SAAAC,GAAS,sBACpBH,EAAMG,EAAUH,GAAO,O,EAI5BI,mBAAqB,kBACnB,EAAKP,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAEpD0B,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKV,MAAMpB,KAAO,EAAK2B,qBAAwB,M,4CAE7D,WAAU,IAAD,EACwBI,KAAKX,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,eAAC,EAAD,CAASe,MAAM,wBAAf,UACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBwB,KAAKV,sBAGxB,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,2C,GApCjBI,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce5dea00.chunk.js","sourcesContent":["import './Notification.css';\r\n\r\nconst Notification = ({ message }) => <p className=\"message\">{message}</p>;\r\n\r\nexport default Notification;\r\n","import Notification from '../Notification';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2 className=\"statistics-title\">Statistics</h2>\r\n\r\n    {total === 0 ? (\r\n      <Notification message=\"No feedback given\" />\r\n    ) : (\r\n      <>\r\n        <p className=\"statistics-item\">Good: {good}</p>\r\n        <p className=\"statistics-item\">Neutral: {neutral}</p>\r\n        <p className=\"statistics-item\">Bad: {bad}</p>\r\n        <p className=\"statistics-item\">Total: {total}</p>\r\n        <p className=\"statistics-item\">\r\n          Positive feedback: {positivePercentage}%\r\n        </p>\r\n      </>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n","import './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className=\"feedback-btn-list\">\r\n    {options.map(option => {\r\n      const capitalizedOption = option[0].toUpperCase() + option.substring(1);\r\n\r\n      return (\r\n        <li className=\"feedback-btn-list-item\" key={option}>\r\n          <button\r\n            className=\"feedback-btn\"\r\n            type=\"button\"\r\n            id={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {capitalizedOption}\r\n          </button>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import './Section.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <b className=\"section-title\">{title}</b>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section/';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOnButtonClick = event => {\n    const key = event.target.id;\n\n    this.setState(prevState => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.handleOnButtonClick}\n        />\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}